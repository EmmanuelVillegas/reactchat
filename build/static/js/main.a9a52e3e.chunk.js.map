{"version":3,"sources":["components/Organisms/Chats/Chats.module.scss","components/Molecules/Message/Message.module.scss","views/Login/Login.module.scss","components/Organisms/ChatRoom/ChatRoom.module.scss","events.js","components/Molecules/MessageInput/MessageInput.module.scss","components/Atoms/Avatar/Avatar.module.scss","components/Layout/Layout.module.scss","images/logo.svg","components/Layout/SideBar/Sidebar.module.scss","components/Atoms/Avatar/Avatar.jsx","components/Layout/SideBar/SideBar.jsx","components/Layout/Layout.jsx","views/Login/Login.jsx","components/Organisms/Chats/Chats.jsx","components/Molecules/Message/Message.jsx","components/Molecules/MessageInput/MessageInput.jsx","components/Organisms/ChatRoom/ChatRoom.jsx","views/Dashboard/Dashboard.jsx","App.jsx","index.js"],"names":["module","exports","root","searchWrapper","item","itemSelected","itemInfo","itemInfoTitle","itemInfoSubtitle","textRight","message","messageDetails","sender","time","inputWrapper","input","button","error","header","roomName","messagesContainer","messageWrapper","typing","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","form","avatar","main","__webpack_require__","p","iconLink","iconLinkSelected","logo","iconLinkWrapper","Avatar","_ref","_ref$img","img","react_default","a","createElement","className","styles","src","alt","SideBar","user","logout","Atoms_Avatar_Avatar","react_router_dom","to","activeClassName","io_index_esm","index_esm","onClick","Layout","handleLogout","children","Layout_SideBar_SideBar","LoginView","socket","handleUser","_useState","useState","_useState2","Object","slicedToArray","nickname","setNickname","_useState3","_useState4","nicknameError","setNicknameError","handleNickname","_ref2","isUser","title","onSubmit","e","preventDefault","emit","autoComplete","type","onChange","value","target","disabled","length","Chats","data","activeChat","setActiveChat","onSendPrivateMessage","map","messages","handleClick","description","classNames","lastMessage","slice","id","concat","key","name","Message","_ref$right","right","MessageInput","sendMessage","sendTyping","setMessage","isTyping","setIsTyping","lastUpdateTime","Date","now","typingInterval","stopCheckingTyping","clearInterval","handleTyping","setInterval","useEffect","autoFocus","onKeyUp","keyCode","ChatRoom","_ref$messages","_ref$typingUsers","typingUsers","elementRef","React","createRef","current","scrollTop","scrollHeight","ref","Molecules_Message_Message","Molecules_MessageInput_MessageInput","Dashboard","state","chats","users","initSocket","_this","props","resetChat","on","addChat","reciever","newUsers","values","filter","u","setState","sendOpenPrivateMessage","_this$props","updateTypingInChat","chatId","newChats","chat","includes","push","addMessageToChat","reset","arguments","undefined","toConsumableArray","messageEvent","typingEvent","this","off","_this2","_this$state","ChatRoomComponent","Organisms_ChatRoom_ChatRoom","react_router","path","render","Fragment","Organisms_Chats_Chats","assign","component","Component","App","routes","setSocket","setUser","reconnect","userData","newSocket","io","console","log","components_Layout_Layout","views_Dashboard_Dashboard","exact","Login","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a9a52e3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chats_root__33drF\",\"searchWrapper\":\"Chats_searchWrapper__M9y5G\",\"item\":\"Chats_item__jxSbr\",\"itemSelected\":\"Chats_itemSelected__2ioyG\",\"itemInfo\":\"Chats_itemInfo__Xq5Qf\",\"itemInfoTitle\":\"Chats_itemInfoTitle__3AIzD\",\"itemInfoSubtitle\":\"Chats_itemInfoSubtitle__3zlq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Message_root__2yStS\",\"textRight\":\"Message_textRight__25mi4\",\"message\":\"Message_message__PJskQ\",\"messageDetails\":\"Message_messageDetails__343Eb\",\"sender\":\"Message_sender___VILF\",\"time\":\"Message_time__VBN1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__2NvZI\",\"inputWrapper\":\"Login_inputWrapper__3UZjA\",\"input\":\"Login_input__PMIes\",\"button\":\"Login_button__2fjXT\",\"error\":\"Login_error__3I9nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatRoom_root__2E0TI\",\"header\":\"ChatRoom_header__3f4Oz\",\"roomName\":\"ChatRoom_roomName__1LVKv\",\"messagesContainer\":\"ChatRoom_messagesContainer__2B9qb\",\"messageWrapper\":\"ChatRoom_messageWrapper__UVqta\",\"typing\":\"ChatRoom_typing__1caoR\"};","module.exports = {\r\n  COMMUNITY_CHAT: 'COMMUNITY_CHAT',\r\n  USER_CONNECTED: 'USER_CONNECTED',\r\n  MESSAGE_RECIEVED: 'MESSAGE_RECIEVED',\r\n  MESSAGE_SENT: 'MESSAGE_SENT',\r\n  USER_DISCONNECTED: 'USER_DISCONNECTED',\r\n  TYPING: 'TYPING',\r\n  VERIFY_USER: 'VERIFY_USER',\r\n  LOGOUT: 'LOGOUT',\r\n  PRIVATE_MESSAGE: 'PRIVATE_MESSAGE'\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MessageInput_root__aW0js\",\"form\":\"MessageInput_form__1nNby\",\"input\":\"MessageInput_input__3OSNL\",\"button\":\"MessageInput_button__10Vx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Avatar_root__2udP3\",\"avatar\":\"Avatar_avatar__2fyJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__11IA2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconLink\":\"Sidebar_iconLink__26bt9\",\"iconLinkSelected\":\"Sidebar_iconLinkSelected__lKLMT\",\"root\":\"Sidebar_root__2M6e6\",\"logo\":\"Sidebar_logo__3aS-N\",\"iconLinkWrapper\":\"Sidebar_iconLinkWrapper__3tKvC\"};","import React from 'react';\r\nimport styles from './Avatar.module.scss';\r\n\r\nimport logo from '../../../images/logo.svg';\r\n\r\nconst Avatar = ({ img = logo }) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <img src={img} alt=\"avatar\" className={styles.avatar} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Sidebar.module.scss';\r\n\r\n// Icons\r\nimport { FaUserFriends } from 'react-icons/fa';\r\nimport { IoIosChatbubbles, IoIosPower } from 'react-icons/io';\r\n\r\n// Atoms\r\nimport { Avatar } from '../../Atoms';\r\n\r\nconst SideBar = ({ user, logout }) => {\r\n  return (\r\n    <nav className={styles.root}>\r\n      <div className={styles.logo}>\r\n        <Avatar />\r\n      </div>\r\n      <div className={styles.iconLinkWrapper}>\r\n        <NavLink\r\n          to=\"/chats\"\r\n          className={styles.iconLink}\r\n          activeClassName={styles.iconLinkSelected}>\r\n          <IoIosChatbubbles />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/users\"\r\n          className={styles.iconLink}\r\n          activeClassName={styles.iconLinkSelected}>\r\n          <FaUserFriends />\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.iconLink} onClick={logout}>\r\n        <IoIosPower />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport styles from './Layout.module.scss';\r\n\r\n// Components\r\nimport SideBar from './SideBar';\r\n\r\nconst Layout = ({ user, handleLogout, children }) => {\r\n  return (\r\n    <main className={styles.main}>\r\n      <SideBar user={user} logout={handleLogout} />\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport styles from './Login.module.scss';\r\n\r\n// Events\r\nimport { VERIFY_USER } from '../../events';\r\n\r\nconst LoginView = ({ socket, handleUser }) => {\r\n  const [nickname, setNickname] = useState('');\r\n  const [nicknameError, setNicknameError] = useState('');\r\n\r\n  const handleNickname = ({ user, isUser }) => {\r\n    if (isUser) {\r\n      setNicknameError('User name taken');\r\n    } else {\r\n      handleUser(user);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    socket.emit(VERIFY_USER, nickname, handleNickname);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setNickname(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <h1 className={styles.title}>¿Como te llamas?</h1>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <div className={styles.inputWrapper}>\r\n          <input type=\"text\" onChange={handleChange} className={styles.input} />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={nickname.length < 1}\r\n            className={styles.button}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n        <p className={styles.error}>{nicknameError}</p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState } from 'react';\r\nimport styles from './Chats.module.scss';\r\n\r\n// Atoms\r\nimport { Avatar } from '../../Atoms';\r\n\r\nconst Chats = ({ data, activeChat, setActiveChat, onSendPrivateMessage }) => {\r\n  const [reciever, setReciever] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSendPrivateMessage(reciever);\r\n    setReciever('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setReciever(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {/* <div className={styles.searchWrapper}>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <input\r\n            placeholder=\"Search\"\r\n            type=\"text\"\r\n            value={reciever}\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">crear</button>\r\n        </form>\r\n      </div> */}\r\n      <div>\r\n        {data.map(item => {\r\n          const { messages } = item;\r\n          let handleClick = null;\r\n          let description = '';\r\n          let classNames = styles.item;\r\n\r\n          if (messages) {\r\n            const lastMessage = messages.slice(-1)[0];\r\n            if (lastMessage) {\r\n              description = lastMessage.message;\r\n            }\r\n          }\r\n\r\n          if (activeChat) {\r\n            if (activeChat.id !== item.id) {\r\n              handleClick = () => setActiveChat(item);\r\n            } else {\r\n              classNames = `${styles.item} ${styles.itemSelected}`;\r\n            }\r\n          } else {\r\n            handleClick = () => setActiveChat(item);\r\n          }\r\n\r\n          return (\r\n            <div key={item.id} onClick={handleClick} className={classNames}>\r\n              <Avatar />\r\n              <div className={styles.itemInfo}>\r\n                <span className={styles.itemInfoTitle}>{item.name}</span>\r\n                <span className={styles.itemInfoSubtitle}>{description}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import React from 'react';\r\nimport styles from './Message.module.scss';\r\n\r\nconst Message = ({ time, message, sender, right = false }) => {\r\n  let classNames = styles.root;\r\n\r\n  if (right) {\r\n    classNames = `${styles.root} ${styles.textRight}`;\r\n  }\r\n\r\n  return (\r\n    <div className={classNames}>\r\n      <span className={styles.message}>{message}</span>\r\n      <div className={styles.messageDetails}>\r\n        <span className={styles.sender}>{sender}</span>\r\n        <span className={styles.time}>{time}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './MessageInput.module.scss';\r\n\r\n// Icons\r\nimport { IoMdSend } from 'react-icons/io';\r\n\r\nconst MessageInput = ({ sendMessage, sendTyping }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const lastUpdateTime = Date.now();\r\n\r\n  let typingInterval = null;\r\n\r\n  const startCheckingTyping = () => {\r\n    typingInterval = setInterval(() => {\r\n      if (Date.now() - lastUpdateTime > 300) {\r\n        setIsTyping(false);\r\n        stopCheckingTyping();\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  const stopCheckingTyping = () => {\r\n    if (typingInterval) {\r\n      clearInterval(typingInterval);\r\n      sendTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    sendMessage(message);\r\n    setMessage('');\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (!isTyping) {\r\n      setIsTyping(true);\r\n      sendTyping(true);\r\n      startCheckingTyping();\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = e => {\r\n    if (e.keyCode !== 13) {\r\n      handleTyping();\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setMessage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCheckingTyping();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={styles.form}>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          value={message}\r\n          onKeyUp={handleKeyUp}\r\n          onChange={handleChange}\r\n          className={styles.input}\r\n        />\r\n        <button\r\n          disabled={message.length < 1}\r\n          type=\"submit\"\r\n          className={styles.button}>\r\n          <IoMdSend />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React, { useEffect } from 'react';\r\nimport styles from './ChatRoom.module.scss';\r\n\r\n// Molecules\r\nimport { Message, MessageInput } from '../../Molecules';\r\n\r\nconst ChatRoom = ({\r\n  name,\r\n  user,\r\n  messages = [],\r\n  typingUsers = [],\r\n  sendMessage,\r\n  sendTyping\r\n}) => {\r\n  const elementRef = React.createRef();\r\n\r\n  const scrollToBottom = () => {\r\n    elementRef.current.scrollTop = elementRef.current.scrollHeight;\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, []);\r\n  return (\r\n    <div className={styles.root}>\r\n      <header className={styles.header}>\r\n        <h2 className={styles.roomName}>{name}</h2>\r\n      </header>\r\n      <div className={styles.messagesContainer} ref={elementRef}>\r\n        {messages.map(message => {\r\n          let right = false;\r\n          let sender = message.sender;\r\n\r\n          if (user.name === message.sender) {\r\n            right = true;\r\n          }\r\n\r\n          if (user.name === message.sender) {\r\n            sender = '';\r\n          }\r\n\r\n          return (\r\n            <Message\r\n              key={message.id}\r\n              message={message.message}\r\n              sender={sender}\r\n              time={message.time}\r\n              right={right}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={styles.typing}>\r\n        {typingUsers.map(name => (\r\n          <span key={name}>{name} esta escribiendo...</span>\r\n        ))}\r\n      </div>\r\n      <MessageInput sendMessage={sendMessage} sendTyping={sendTyping} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Events\r\nimport {\r\n  MESSAGE_RECIEVED,\r\n  MESSAGE_SENT,\r\n  TYPING,\r\n  COMMUNITY_CHAT,\r\n  PRIVATE_MESSAGE,\r\n  USER_CONNECTED,\r\n  USER_DISCONNECTED\r\n} from '../../events';\r\n\r\n// Organisms\r\nimport { Chats, ChatRoom } from '../../components/Organisms';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    chats: [],\r\n    activeChat: null,\r\n    users: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { socket } = this.props;\r\n    this.initSocket(socket);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { socket } = this.props;\r\n    socket.off(PRIVATE_MESSAGE);\r\n    socket.off(USER_CONNECTED);\r\n    socket.off(USER_DISCONNECTED);\r\n  }\r\n\r\n  initSocket = socket => {\r\n    const { user } = this.props;\r\n    socket.emit(COMMUNITY_CHAT, this.resetChat);\r\n    socket.on(PRIVATE_MESSAGE, this.addChat);\r\n    socket.on('connect', () => {\r\n      socket.emit(COMMUNITY_CHAT, this.resetChat);\r\n    });\r\n    socket.emit(PRIVATE_MESSAGE, { reciever: 'Emma', sender: user.name });\r\n    socket.on(USER_CONNECTED, users => {\r\n      const newUsers = Object.values(users).filter(u => u.id !== user.id);\r\n      this.setState({ users: newUsers });\r\n    });\r\n  };\r\n\r\n  sendOpenPrivateMessage = reciever => {\r\n    const { socket, user } = this.props;\r\n    const { activeChat } = this.state;\r\n    socket.emit(PRIVATE_MESSAGE, { reciever, sender: user.name, activeChat });\r\n  };\r\n\r\n  updateTypingInChat = chatId => {\r\n    return ({ isTyping, user }) => {\r\n      if (user !== this.props.user.name) {\r\n        const { chats } = this.state;\r\n\r\n        let newChats = chats.map(chat => {\r\n          if (chat.id === chatId) {\r\n            if (isTyping && !chat.typingUsers.includes(user)) {\r\n              chat.typingUsers.push(user);\r\n            } else if (!isTyping && chat.typingUsers.includes(user)) {\r\n              chat.typingUsers = chat.typingUsers.filter(u => u !== user);\r\n            }\r\n          }\r\n          return chat;\r\n        });\r\n        this.setState({ chats: newChats });\r\n      }\r\n    };\r\n  };\r\n\r\n  addMessageToChat = chatId => {\r\n    return message => {\r\n      const { chats } = this.state;\r\n      let newChats = chats.map(chat => {\r\n        if (chat.id === chatId) chat.messages.push(message);\r\n        return chat;\r\n      });\r\n\r\n      this.setState({ chats: newChats });\r\n    };\r\n  };\r\n\r\n  addChat = (chat, reset = false) => {\r\n    const { socket } = this.props;\r\n    const { chats } = this.state;\r\n\r\n    const newChats = reset ? [chat] : [...chats, chat];\r\n    this.setState({\r\n      chats: newChats\r\n      // activeChat: reset ? chat : this.state.activeChat\r\n    });\r\n\r\n    const messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`;\r\n    const typingEvent = `${TYPING}-${chat.id}`;\r\n\r\n    socket.on(typingEvent, this.updateTypingInChat(chat.id));\r\n    socket.on(messageEvent, this.addMessageToChat(chat.id));\r\n  };\r\n\r\n  resetChat = chat => {\r\n    return this.addChat(chat, true);\r\n  };\r\n\r\n  sendMessage = (chatId, message) => {\r\n    const { socket } = this.props;\r\n    socket.emit(MESSAGE_SENT, { chatId, message });\r\n  };\r\n\r\n  sendTyping = (chatId, isTyping) => {\r\n    const { socket } = this.props;\r\n    socket.emit(TYPING, { chatId, isTyping });\r\n  };\r\n\r\n  setActiveChat = activeChat => {\r\n    this.setState({ activeChat });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const { chats, activeChat, users } = this.state;\r\n    let ChatRoomComponent = null;\r\n\r\n    if (activeChat !== null) {\r\n      ChatRoomComponent = () => (\r\n        <ChatRoom\r\n          name={activeChat.name}\r\n          user={user}\r\n          messages={activeChat.messages}\r\n          typingUsers={activeChat.typingUsers}\r\n          sendMessage={message => this.sendMessage(activeChat.id, message)}\r\n          sendTyping={isTyping => this.sendTyping(activeChat.id, isTyping)}\r\n        />\r\n      );\r\n    } else {\r\n      ChatRoomComponent = () => (\r\n        <div>\r\n          <h3>Escoge un chat!</h3>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          path=\"/chats\"\r\n          render={props => (\r\n            <>\r\n              <Chats\r\n                {...props}\r\n                title=\"Chats\"\r\n                data={chats}\r\n                activeChat={activeChat}\r\n                setActiveChat={this.setActiveChat}\r\n                onSendPrivateMessage={this.sendOpenPrivateMessage}\r\n              />\r\n              <ChatRoomComponent />\r\n            </>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/users\"\r\n          render={props => (\r\n            <>\r\n              <Chats\r\n                {...props}\r\n                title=\"Users\"\r\n                data={users}\r\n                activeChat={activeChat}\r\n                setActiveChat={this.setActiveChat}\r\n                onSendPrivateMessage={this.sendOpenPrivateMessage}\r\n              />\r\n              <ChatRoomComponent />\r\n            </>\r\n          )}\r\n        />\r\n        <Route component={ChatRoomComponent} />\r\n\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\n\n// Events\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from './events';\n\n//  Layout\nimport Layout from './components/Layout';\n\n//  Views\nimport { LoginView, DashboardView } from './views';\n\n// URL\nconst socketUrl = 'http://localhost:3231';\n\nconst App = () => {\n  let routes = null;\n  const [socket, setSocket] = useState(null);\n  const [user, setUser] = useState(null);\n\n  const initSocket = () => {\n    const newSocket = io(socketUrl);\n    newSocket.on('connect', () => {\n      if (user) {\n        reconnect(socket);\n      } else {\n        console.log('Connected');\n      }\n    });\n    setSocket(newSocket);\n  };\n\n  const reconnect = socket => {\n    socket.emit(VERIFY_USER, user.name, ({ isUser, user }) => {\n      if (isUser) {\n        setUser(null);\n      } else {\n        setUser(user);\n      }\n    });\n  };\n\n  const handleUser = userData => {\n    socket.emit(USER_CONNECTED, userData);\n    setUser(userData);\n  };\n\n  const handleLogout = userData => {\n    socket.emit(LOGOUT);\n    setUser(null);\n  };\n\n  useEffect(() => {\n    initSocket();\n  }, []);\n\n  if (user) {\n    routes = (\n      <Layout user={user} handleLogout={handleLogout}>\n        <DashboardView socket={socket} user={user} />\n        <Redirect to=\"/chats\" />\n      </Layout>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <LoginView {...props} socket={socket} handleUser={handleUser} />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return <BrowserRouter>{routes}</BrowserRouter>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.scss';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}